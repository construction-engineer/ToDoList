version: "3.9"

services:

  postgres:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_db:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - backend_td

  api:
    image: amikhailov5593/todolist:latest
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    command: python3 manage.py runserver 0.0.0.0:8000
    healthcheck:
      test: curl -sS http://127.0.0.1:8000/ping/ || echo 1
      interval: 5s
      timeout: 10s
      retries: 3
    networks:
      - backend_td
      - frontend_td

  front:
    image: sermalenk/skypro-front:lesson-36
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - frontend_td
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/static:/opt/static/

volumes:
  postgres_db:

networks:
  backend_td:
    driver: bridge
  frontend_td:
    driver: bridge
