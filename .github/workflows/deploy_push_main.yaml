name: Build and deploy action
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/todolist:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/todolist:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/todolist:buildcache, mode=max~

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    env:
      ANSIBLE_VAULT_PASSWORD_FILE: /tmp/.vault_pass.txt
      VAULT_PASSWORD: ${{ secrets.VAULT_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Render template
        run: |
          echo "$VAULT_PASSWORD" > /tmp/.vault_pass.txt
          ansible-vault decrypt ./deploy/env
          mv deploy/env deploy/.env
#          printf "\nTAG_NAME=latest" >> deploy/.env

      - name: Copy on server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: todolist
          strip_components: 1

      - name: run docker-compose
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd todolist
            docker compose up -d

      - name: clear after deploy
        if: always()
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker system prune -a -f